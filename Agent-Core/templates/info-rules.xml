<behaviourtemplates xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://github.com/hmi-utwente/FlipperMMDS D:\GitHub\Flipper\resource\template.xsd">
	

	<template id="set-unknown" name="Not understood" >
		<preconditions>
			<compare value1="$userstates.utterance.consumers" comparator="not_contains" value2="rules" />
			<compare value1="$agentstates.intent.ts" comparator="smaller_than" value2="$util.timestamp.now-7000"/>
			<compare value1="$userstates.utterance.value" comparator="not_equals" value2=""/>
			<compare value1="$userstates.utterance.value" comparator="not_equals" value2=" "/>
			<compare value1="$dialoguestates.topic.value" value2="infoRetrieval"/>
			<indicator startvalue="0" comparator= "greater_equals" endvalue="1">
				<icompare value1="$userstates.intent.function" comparator="not_exists" modifier="+1"/>
				<icompare value1="$userstates.intent.function" value2="" modifier="+1"/>
			</indicator>
		</preconditions>
		<effects>
			<update name="$userstates.intent.function" value="unknown"/>
			<update name="$userstates.intent.ts" value="$util.timestamp.now"/>

			<update name="$agentstates.turn.want" value="true"/>
			<update name="$userstates.utterance.consumers._addlast" value="rules" />
		</effects>
	</template>

	<template id="intro">
		<preconditions>
			<compare value1="$userstates.utterance.consumers" comparator="not_contains" value2="rules" /> 
			<compare value1="$dialoguestates.topic.value" value2="infoRetrieval" />
			<compare value1="$dialoguestates.state.value" value2="enter" />
		</preconditions>        
		<effects> 
			<update name="$dialoguestates.state.value" value="body" />
			<update name="$userstates.intent.ts" value="$util.timestamp.now"/> 
			<update name="$userstates.intent.function" value="request" />
			<update name="$userstates.intent.subject" value="proposeQuestions" />
			
			<update name="$agentstates.turn.want" value="true"/>
			<update name="$userstates.utterance.consumers._addlast" value="rules" />
		</effects>
	</template>



	<!--White rabbit intents !-->
	<!-- User: "What did the white rabbit do?-->
	<!-- Initial -->
	<template id="set-question-rabbit-001a" name="User Wants Opinion About White Rabbit">
		<preconditions>
			<compare value1="$userstates.utterance.consumers" comparator="not_contains" value2="rules" /> 
			<compare value1="$dialoguestates.topic.value" value2="infoRetrieval" />						
			<compare value1="$userstates.utterance.pos" comparator="contains" value2="white" />
			<compare value1="$userstates.utterance.pos" comparator="contains" value2="rabbit" />		
			<indicator comparator="greater_equals" startvalue="1" endvalue="2">
				<icompare value1="$userstates.emotion.valence" comparator="greater_equals" value2="0.6" modifier="+1"/>
				<icompare value1="$userstates.emotion.arousal" comparator="greater_equals" value2="0.6" modifier="+1"/>
			</indicator>			
		</preconditions>
		<effects>
			<update name="$userstates.intent.function" value="setQuestion"/>
			<update name="$userstates.intent.ts" value="$util.timestamp.now"/>
			<update name="$userstates.intent.type" value="opinion"/>
			<update name="$userstates.intent.subject" value="whiteRabbit"/>
			<update name="$dialoguestates.lastsubject" value="whiteRabbit"/>
			
			<update name="$agentstates.turn.want" value="true"/>
			<update name="$userstates.utterance.consumers._addlast" value="rules" />
		</effects>
	</template>
	<template id="set-question-rabbit-001b" name="User Wants Info About White Rabbit">
		<preconditions>
			<compare value1="$userstates.utterance.consumers" comparator="not_contains" value2="rules" /> 
			<compare value1="$dialoguestates.topic.value" value2="infoRetrieval" />						
			<compare value1="$userstates.utterance.pos" comparator="contains" value2="white" />
			<compare value1="$userstates.utterance.pos" comparator="contains" value2="rabbit" />		
			<compare value1="$userstates.emotion.valence" comparator="smaller_than" value2="0.6"/>
			<compare value1="$userstates.emotion.arousal" comparator="smaller_than" value2="0.6" />			
		</preconditions>
		<effects>
			<update name="$userstates.intent.function" value="setQuestion"/>
			<update name="$userstates.intent.ts" value="$util.timestamp.now"/>
			<update name="$userstates.intent.type" value="neutral"/>
			<update name="$userstates.intent.subject" value="whiteRabbit"/>
			<update name="$dialoguestates.lastsubject" value="whiteRabbit"/>
			
			<update name="$agentstates.turn.want" value="true"/>
			<update name="$userstates.utterance.consumers._addlast" value="rules" />
		</effects>
	</template>
	<!-- Follow up -->
	<template id="set-question-followup-a" name="User Wants Follow Opinion">
		<preconditions>
			<compare value1="$userstates.utterance.consumers" comparator="not_contains" value2="rules" /> 
			<compare value1="$dialoguestates.topic.value" value2="infoRetrieval" />	
			<compare value1="$userstates.utterance.followup" value2="true" />
			<compare value1="$dialoguestates.lastsubject" comparator="exists" />									
			<compare value1="$userstates.utterance.pos" comparator="contains" value2="information" />	
			<indicator comparator="greater_equals" startvalue="1" endvalue="2">
				<icompare value1="$userstates.emotion.valence" comparator="greater_equals" value2="0.6" modifier="+1"/>
				<icompare value1="$userstates.emotion.arousal" comparator="greater_equals" value2="0.6" modifier="+1"/>
			</indicator>			
		</preconditions>
		<effects>

			<update name="$userstates.intent.function" value="setQuestion"/>
			<update name="$userstates.intent.subject" value="$dialoguestates.lastsubject"/>
			<update name="$userstates.intent.ts" value="$util.timestamp.now"/>
			<update name="$userstates.intent.type" value="opinion"/>
			
			
			<update name="$agentstates.turn.want" value="true"/>
			<update name="$userstates.utterance.consumers._addlast" value="rules" />
		</effects>
	</template>
	<template id="set-question-followup-b" name="User Wants Follow Info">
		<preconditions>
			<compare value1="$userstates.utterance.consumers" comparator="not_contains" value2="rules" /> 
			<compare value1="$dialoguestates.topic.value" value2="infoRetrieval" />						
			<compare value1="$userstates.utterance.followup" value2="true" />
			<compare value1="$dialoguestates.lastsubject" comparator="exists" />
			<compare value1="$userstates.utterance.pos" comparator="contains" value2="information" />	
			<compare value1="$userstates.emotion.valence" comparator="smaller_than" value2="0.6"/>
			<compare value1="$userstates.emotion.arousal" comparator="smaller_than" value2="0.6" />			
		</preconditions>
		<effects>
			<update name="$userstates.intent.function" value="setQuestion"/>
			<update name="$userstates.intent.ts" value="$util.timestamp.now"/>
			<update name="$userstates.intent.type" value="neutral"/>
			<update name="$userstates.intent.subject" value="$dialoguestates.lastsubject"/>
			
			
			<update name="$agentstates.turn.want" value="true"/>
			<update name="$userstates.utterance.consumers._addlast" value="rules" />
		</effects>
	</template>


	<template id="set-question-followup-c" name="User Wants Follow But No Subject">
		<preconditions>
			<compare value1="$userstates.utterance.consumers" comparator="not_contains" value2="rules" /> 
			<compare value1="$dialoguestates.topic.value" value2="infoRetrieval" />						
			<compare value1="$userstates.utterance.followup" value2="true" />
			<compare value1="$dialoguestates.lastsubject" comparator="not_exists" />
			<compare value1="$userstates.utterance.pos" comparator="contains" value2="information" />
		</preconditions>
		<effects>
			<update name="$userstates.intent.function" value="unknown"/>
			<update name="$userstates.intent.ts" value="$util.timestamp.now"/>
			<update name="$agentstates.turn.want" value="true"/>
			<update name="$userstates.utterance.consumers._addlast" value="rules" />
		</effects>
	</template>

	<!--Hatter intents !-->
	<template id="set-question-hatter-001a" name="User Wants Opinion About Hatter">
		<preconditions>
			<compare value1="$userstates.utterance.consumers" comparator="not_contains" value2="rules" /> 
			<compare value1="$dialoguestates.topic.value" value2="infoRetrieval" />						
			<compare value1="$userstates.utterance.pos" comparator="contains" value2="hatter" />	
			<indicator comparator="greater_equals" startvalue="1" endvalue="2">
				<icompare value1="$userstates.emotion.valence" comparator="greater_equals" value2="0.6" modifier="+1"/>
				<icompare value1="$userstates.emotion.arousal" comparator="greater_equals" value2="0.6" modifier="+1"/>
			</indicator>			
		</preconditions>
		<effects>
			<update name="$userstates.intent.function" value="setQuestion"/>
			<update name="$userstates.intent.ts" value="$util.timestamp.now"/>
			<update name="$userstates.intent.type" value="opinion"/>
			<update name="$userstates.intent.subject" value="hatter"/>
			<update name="$dialoguestates.lastsubject" value="hatter"/>
			
			<update name="$agentstates.turn.want" value="true"/>
			<update name="$userstates.utterance.consumers._addlast" value="rules" />
		</effects>
	</template>
	<template id="set-question-hatter-001b" name="User Wants Info About Hatter">
		<preconditions>
			<compare value1="$userstates.utterance.consumers" comparator="not_contains" value2="rules" /> 
			<compare value1="$dialoguestates.topic.value" value2="infoRetrieval" />						
			<compare value1="$userstates.utterance.pos" comparator="contains" value2="hatter" />	
			<compare value1="$userstates.emotion.valence" comparator="smaller_than" value2="0.6"/>
			<compare value1="$userstates.emotion.arousal" comparator="smaller_than" value2="0.6" />			
		</preconditions>
		<effects>
			<update name="$userstates.intent.function" value="setQuestion"/>
			<update name="$userstates.intent.ts" value="$util.timestamp.now"/>
			<update name="$userstates.intent.type" value="neutral"/>
			<update name="$userstates.intent.subject" value="hatter"/>
			<update name="$dialoguestates.lastsubject" value="hatter"/>
			
			
			<update name="$agentstates.turn.want" value="true"/>
			<update name="$userstates.utterance.consumers._addlast" value="rules" />
		</effects>
	</template>
	

	<!--Gryphon intents !-->
	<template id="set-question-gryphon-001a" name="User Wants Opinion About Gryphon">
		<preconditions>
			<compare value1="$userstates.utterance.consumers" comparator="not_contains" value2="rules" /> 
			<compare value1="$dialoguestates.topic.value" value2="infoRetrieval" />						
			<compare value1="$userstates.utterance.pos" comparator="contains" value2="gryphon" />		
			<indicator comparator="greater_equals" startvalue="1" endvalue="2">
				<icompare value1="$userstates.emotion.valence" comparator="greater_equals" value2="0.6" modifier="+1"/>
				<icompare value1="$userstates.emotion.arousal" comparator="greater_equals" value2="0.6" modifier="+1"/>
			</indicator>			
		</preconditions>
		<effects>
			<update name="$userstates.intent.function" value="setQuestion"/>
			<update name="$userstates.intent.ts" value="$util.timestamp.now"/>
			<update name="$userstates.intent.type" value="opinion"/>
			<update name="$userstates.intent.subject" value="gryphon"/>
			<update name="$dialoguestates.lastsubject" value="gryphon"/>
			
			
			<update name="$agentstates.turn.want" value="true"/>
			<update name="$userstates.utterance.consumers._addlast" value="rules" />
		</effects>
	</template>
	<template id="set-question-gryphon-001b" name="User Wants Info About Gryphon">
		<preconditions>
			<compare value1="$userstates.utterance.consumers" comparator="not_contains" value2="rules" /> 
			<compare value1="$dialoguestates.topic.value" value2="infoRetrieval" />						
			<compare value1="$userstates.utterance.pos" comparator="contains" value2="gryphon"/>		
			<compare value1="$userstates.emotion.valence" comparator="smaller_than" value2="0.6"/>
			<compare value1="$userstates.emotion.arousal" comparator="smaller_than" value2="0.6" />			
		</preconditions>
		<effects>
			<update name="$userstates.intent.function" value="setQuestion"/>
			<update name="$userstates.intent.ts" value="$util.timestamp.now"/>
			<update name="$userstates.intent.type" value="neutral"/>
			<update name="$userstates.intent.subject" value="gryphon"/>
			<update name="$dialoguestates.lastsubject" value="gryphon"/>
			
			<update name="$agentstates.turn.want" value="true"/>
			<update name="$userstates.utterance.consumers._addlast" value="rules" />
		</effects>
	</template>
</behaviourtemplates>